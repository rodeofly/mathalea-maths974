# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

variables:
  FF_USE_POD_ACTIVE_DEADLINE_SECONDS: 'false'

stages:
  - test
  - build-projet
  - playwright-testCanEleve
  - deploy-server
  - playwright-test
  - playwright-testLycee
  - playwright-pdf
  - playwright-pdfDNB
  - playwright-pdfBAC

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

default:
  image: node:23.9.0

cache:
  key: 'pnpm-${CI_COMMIT_REF_SLUG}'
  paths:
    - .pnpm-store

.install_dependencies:
  before_script:
    - npm install -g corepack@latest
    - corepack enable
    - corepack prepare pnpm@latest-10 --activate
    - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - pnpm add playwright@1.51.1 --save-dev
    - pnpm add @playwright/test@1.51.1 --save-dev
    - NODE_OPTIONS=--max-old-space-size=4096 pnpm install
    - nohup pnpm start &
    - sleep 20
    - until $(curl --output /dev/null --head --fail http://localhost:80/alea/); do printf '.'; sleep 10; done
    - sleep 60

.install_dependenciesPDF:
  before_script:
    - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - lualatex -v
    - apt-get update --allow-releaseinfo-change
    - apt-get install -y libasound2t64 libgbm1 libgtk-3-0 libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 xdg-utils
    - pnpm exec playwright install chromium
    - ls /root/.cache/ms-playwright/
    - pnpm add playwright@1.51.1 --save-dev
    - pnpm install
    - nohup pnpm start &
    - sleep 10
    - until $(curl --output /dev/null --head --fail http://localhost:80/alea/); do printf '.'; sleep 10; done
    - sleep 30

.install_dependenciesPDFDNB:
  before_script:
    - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - lualatex -v
    - apt-get update --allow-releaseinfo-change
      apt-get install -y libasound2t64 libgbm1 libgtk-3-0 libnss3 libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 xdg-utils
    - pnpm exec playwright install chromium
    - ls /root/.cache/ms-playwright/
    - pnpm add playwright@1.51.1 --save-dev
    - git clone https://forge.apps.education.fr/coopmaths/dnb.git ./public/static/dnb
    - pnpm install
    - nohup pnpm start &
    - sleep 10
    - until $(curl --output /dev/null --head --fail http://localhost:80/alea/); do printf '.'; sleep 10; done
    - sleep 30

.install_dependenciesPDFBAC:
  before_script:
    # - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - lualatex -v
    - pnpm exec playwright install --with-deps chromium
    - ls /root/.cache/ms-playwright/
    - pnpm add playwright@1.51.1 --save-dev
    - git clone https://forge.apps.education.fr/coopmaths/bac.git ./public/static/bac
    - pnpm install
    - nohup pnpm start &
    - sleep 10
    - until $(curl --output /dev/null --head --fail http://localhost:80/alea/); do printf '.'; sleep 10; done
    - sleep 30

.testCIPDF:
  image: guironne/tex-live-nodejs-playwright9
  extends: .install_dependenciesPDF
  stage: playwright-pdf
  allow_failure: true
  timeout: 2h 30m
  rules:
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: manual
    - if: $CI_COMMIT_BRANCH == "mathalea-jobs"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_MA == "PDF"
      when: always
    - when: never
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
      - unknown_failure
  artifacts:
    when: always
    paths:
      - tests/e2e/logs
    reports:
      junit: tests/e2e/logs/junit-report.xml
    expire_in: 10 day
    # exclude:
    #  - updatefile/output/*.*

.testCI:
  extends: .install_dependencies
  image: mcr.microsoft.com/playwright:v1.51.0-noble
  stage: playwright-test
  allow_failure: true
  timeout: 3h 30m
  rules:
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_MA == "CONSOLE"
      when: always
    - when: never
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
      - unknown_failure
  artifacts:
    when: always
    paths:
      - tests/e2e/logs
    reports:
      junit: tests/e2e/logs/junit-report.xml
    expire_in: 10 day

test6e:
  extends: .testCI
  script:
    - NIV=6e/6 pnpm test:e2e:console_errors

test5e:
  extends: .testCI
  script:
    - NIV=5e/5 pnpm test:e2e:console_errors

test4e:
  extends: .testCI
  script:
    - NIV=4e/4 pnpm test:e2e:console_errors

test3e:
  extends: .testCI
  script:
    - NIV=3e/3 pnpm test:e2e:console_errors

test2e:
  extends: .testCI
  stage: playwright-testLycee
  script:
    - NIV=2e/2 pnpm test:e2e:console_errors

test1e:
  extends: .testCI
  stage: playwright-testLycee
  script:
    - NIV=1e/1 pnpm test:e2e:console_errors

testTExOuTSpeOutechno:
  extends: .testCI
  stage: playwright-testLycee
  script:
    - NIV=TEx^TSpe^techno pnpm test:e2e:console_errors

testQCM:
  extends: .testCI
  script:
    - NIV=QCM pnpm test:e2e:console_errors

testCan6e5e:
  extends: .testCI
  script:
    - NIV=can/6e^can/5e pnpm test:e2e:console_errors

testCan4e3e:
  extends: .testCI
  script:
    - NIV=can/4e^can/3e pnpm test:e2e:console_errors

testCan2e1e:
  extends: .testCI
  stage: playwright-testLycee
  script:
    - NIV=can/2e^can/1e pnpm test:e2e:console_errors

testCanExTSpe:
  extends: .testCI
  stage: playwright-testLycee
  script:
    - NIV=can/Ex^can/TSpe pnpm test:e2e:console_errors

testCan2e1ePDF:
  extends: .testCIPDF
  script:
    - NIV=can/2e^can/1e pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/can*

testCan6e5ePDF:
  extends: .testCIPDF
  script:
    - NIV=can/6e^can/5e pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/can*

testCan4e3ePDF:
  extends: .testCIPDF
  script:
    - NIV=can/4e^can/3e pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/can*

testE3C20202024PDF:
  extends:
    - .testCIPDF
    - .install_dependenciesPDFBAC
  stage: playwright-pdfBAC
  script:
    - NIV=e3c_2024^e3c_2023^e3c_2022^e3c_2021 pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/e3c*

testBAC20202024PDF:
  extends:
    - .testCIPDF
    - .install_dependenciesPDFBAC
  stage: playwright-pdfBAC
  script:
    - NIV=bac_2024^bac_2023^bac_2022^bac_2021 pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/bac*

testDNB20132015PDF:
  extends:
    - .testCIPDF
    - .install_dependenciesPDFDNB
  stage: playwright-pdfDNB
  script:
    - NIV=dnb_2013^dnb_2014^dnb_2015 pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/dnb*

testDNB20162019PDF:
  extends:
    - .testCIPDF
    - .install_dependenciesPDFDNB
  stage: playwright-pdfDNB
  script:
    - NIV=dnb_2016^dnb_2017^dnb_2018^dnb_2019 pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/dnb*

testDNB20202024PDF:
  extends:
    - .testCIPDF
    - .install_dependenciesPDFDNB
  stage: playwright-pdfDNB
  script:
    - NIV=dnb_2020^dnb_2021^dnb_2022^dnb_2023^dnb_2024 pnpm test:e2e:pdfexports
  artifacts:
    paths:
      - updatefile/output/dnb*

test6ePDF:
  extends: .testCIPDF
  script:
    - NIV=6e/6 pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/6e*

test5ePDF:
  extends: .testCIPDF
  script:
    - NIV=5e/5 pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/5e*

test4ePDF:
  extends: .testCIPDF
  script:
    - NIV=4e/4 pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/4e*

test3ePDF:
  extends: .testCIPDF
  script:
    - NIV=3e/3 pnpm test:e2e:pdfexports
    - pnpm -v
  artifacts:
    paths:
      - updatefile/output/3e*

testExosModified:
  extends: .testCI
  stage: build-projet
  script:
    # - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm run prebuild-unit-tests && pnpm vite build
    # - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm vite build
    # - CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA)
    - git fetch origin "$CI_COMMIT_REF_NAME" --depth=10
    - git checkout FETCH_HEAD
    - |
      COMMIT_COUNT=$(git rev-list --count HEAD)
      MAX_COMMITS=5

      if [ "$COMMIT_COUNT" -lt "$MAX_COMMITS" ]; then
        DIFF_BASE="HEAD~$((COMMIT_COUNT - 1))"
      else
        DIFF_BASE="HEAD~$MAX_COMMITS"
      fi
      echo "Comparing from $DIFF_BASE to HEAD"

      if git rev-parse --verify "$DIFF_BASE" >/dev/null 2>&1; then
        echo "Comparing from $DIFF_BASE to HEAD"
        CHANGED_FILES=$(git diff --name-only "$DIFF_BASE"..HEAD)
      else
        echo "⚠️ Le commit $DIFF_BASE n'est pas disponible (clone trop peu profond ?)"
        CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA)
      fi

    # -  CHANGED_FILES=$(git diff --name-only "$DIFF_BASE"..HEAD)
    # - CHANGED_FILES=$(git diff --name-only HEAD~5..HEAD)
    - echo "$CHANGED_FILES"
    - CHANGED_FILES="$CHANGED_FILES" pnpm test:e2e:console_errors
  rules:
    - when: always

bcommit:
  stage: build-projet
  script:
    - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    - echo "CI_OPEN_MERGE_REQUESTS '$CI_OPEN_MERGE_REQUESTS'"
    - echo "CI_PIPELINE_SOURCE '$CI_PIPELINE_SOURCE'"
    - echo "$CI_COMMIT_AUTHOR"
    - apt-get update -y
    - apt-get install -y wget iproute2
    - wget -qO- ipinfo.io/ip
    - ip addr show
  rules:
    - when: always
  artifacts:
    when: on_failure

build:
  extends: .testCI
  stage: build-projet
  script:
    - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    - echo "CI_OPEN_MERGE_REQUESTS '$CI_OPEN_MERGE_REQUESTS'"
    - echo "CI_PIPELINE_SOURCE '$CI_PIPELINE_SOURCE'"
    #- NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm run prebuild-unit-tests && pnpm vite build
    - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm vite build
    - echo "$CI_COMMIT_AUTHOR"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: always
    - when: never
  artifacts:
    when: always
    paths:
      - dist
    expire_in: 1 day

deployftp:
  image: ubuntu
  stage: deploy-server
  allow_failure: true
  script:
    - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    - echo "CI_OPEN_MERGE_REQUESTS '$CI_OPEN_MERGE_REQUESTS'"
    - echo "CI_PIPELINE_SOURCE '$CI_PIPELINE_SOURCE'"
    - apt-get update -y && apt-get install -y lftp
    - date_deploy=$(date +%Y-%m-%d_%H-%M-%S)
    - apt-get install -y nodejs npm
    - npm install -g corepack@latest
    - corepack enable
    - corepack prepare pnpm@latest-10 --activate
    - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - pnpm install
    - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm run prebuild-unit-tests && pnpm vite build
    - echo "date_deploy $date_deploy"
    - echo "Déploiement FTP avec lftp sur ftp.sc1ceto1587.universe.wf..."
    - lftp -c "
      set ftp:ssl-allow no;
      open -u $FTP_USER,$FTP_PASSWORD ftp.sc1ceto1587.universe.wf;
      mirror -R --delete --verbose ./dist /releases/$date_deploy;
      "
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: manual
    - when: never
  artifacts:
    when: always
    paths:
      - dist
    expire_in: 1 day

deploy:
  image: ubuntu
  stage: deploy-server
  allow_failure: true
  script:
    - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    - echo "CI_OPEN_MERGE_REQUESTS '$CI_OPEN_MERGE_REQUESTS'"
    - echo "CI_PIPELINE_SOURCE '$CI_PIPELINE_SOURCE'"
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - apt-get update -y
    - apt-get install -y wget iproute2
    - wget -qO- ipinfo.io/ip
    - ip addr show
    - apt-get install -y rsync
    - apt-get install -y nodejs npm
    - npm install -g corepack@latest
    - corepack enable
    - corepack prepare pnpm@latest-10 --activate
    - pnpm config set store-dir .pnpm-store
    - pnpm -v
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_FILE_KEY"
    - ssh-add "$SSH_FILE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - touch ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - ssh-keyscan ssh.cluster010.hosting.ovh.net >> ~/.ssh/known_hosts
    - ssh -i "$SSH_FILE_KEY" -v clarensa-mgu@ssh.cluster010.hosting.ovh.net
    - date_deploy=$(date +%Y-%m-%d_%H-%M-%S)
    - echo "date_deploy $date_deploy"
    - pnpm install
    - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm run prebuild-unit-tests && pnpm vite build
    - ssh -i "$SSH_FILE_KEY" clarensa-mgu@ssh.cluster010.hosting.ovh.net "mkdir -p ~/releases/'$date_deploy'"
    - rsync -avz -e "ssh -i '$SSH_FILE_KEY'" dist/ clarensa-mgu@ssh.cluster010.hosting.ovh.net:~/releases/$date_deploy
    # - chmod 400 "$SSH_KEY"
    # - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    # - ssh-add "$SSH_KEY"
    # - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    # - ssh -v clarensa-mgu@ssh.cluster010.hosting.ovh.net
    # - echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    # - echo "$SSH_MGU" | tr -d '\r' | ssh-add -
    #- echo "CI_COMMIT_BRANCH '$CI_COMMIT_BRANCH'"
    #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # - apt-get update -y
    # - apt-get install -y rsync
    # - rsync -avz -e "ssh -i <(echo \"$SSH_PRIVATE_KEY\")" . clarensa@ssh.cluster010.hosting.ovh.net:~/releases/test/
    #- NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm run prebuild-unit-tests && pnpm vite build
    # - NODE_OPTIONS=--max-old-space-size=4096 pnpm run makeJson && pnpm vite build
    # - echo "$CI_COMMIT_AUTHOR"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: manual
    - when: never
  artifacts:
    when: always
    paths:
      - dist
    expire_in: 1 day

playwright-testCanEleve:
  extends: .testCI
  stage: playwright-testCanEleve
  allow_failure: true
  script:
    - pnpm test:e2e:views
  rules:
    - if: $CI_OPEN_MERGE_REQUESTS
      when: always
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: always
    - when: never
  artifacts:
    when: on_failure
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
      - unknown_failure
      - script_failure

playwright-testConsistency:
  extends: .testCI
  stage: playwright-testCanEleve
  allow_failure: true
  script:
    - pnpm test:e2e:consistency
  rules:
    - if: $CI_OPEN_MERGE_REQUESTS
      when: always
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: always
    - when: never
  artifacts:
    when: on_failure
  retry:
    max: 2
    when:
      - runner_system_failure
      - api_failure
      - unknown_failure
      - script_failure

playwright-testInteractivity:
  extends: .testCI
  stage: playwright-testCanEleve
  allow_failure: true
  script:
    - pnpm test:e2e:interactivity
  rules:
    - if: $CI_OPEN_MERGE_REQUESTS
      when: always
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
    - if: $CI_COMMIT_BRANCH == "guironne-jobs"
      when: always
    - when: never
  artifacts:
    when: on_failure
